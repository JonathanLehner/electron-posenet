{"version":3,"sources":["components/TreeUI.jsx","components/DetectionOverview.jsx","components/DetectionUI.jsx","components/Home.jsx","components/LoginModal.jsx","components/NavBar.jsx","components/About.jsx","components/Statistics.jsx","components/SettingsReminders.jsx","components/NotificationContainer.jsx","demo_util.js","demo.js","App.js","serviceWorker.js","index.js","images/treeb1.jpg","images/treeb2.jpg","images/treeb3.jpg","images/treeb4.jpg","images/treeb5.jpg","images/sunb1.jpg","images/sunb2.jpg","images/sunb3.jpg","images/sunb4.jpg","images/sunb5.jpg","logo.svg"],"names":["window","process","type","TreeComponent","props","img_src","aggregatedPoseScore","console","log","tree1","tree2","tree3","tree4","tree5","src","style","width","height","objectFit","SunComponent","currentPoseScore","sun1","document","querySelector","href","sun2","sun3","sun4","sun5","position","top","right","TreeUI","border","DetectionOverview","isstarted","isstopped","isloaded","showVideo","count","startDetection","toggleStopped","toggleVideo","pose_score","value","noseDistance","calibrated_noseDistance","onBreak","textAlign","padding","toFixed","isSlough","noAttention","screenDistance","workingTime","lookingAtScreen","lookingAway","breakTime","DetectionUI","recalibrate","onClick","id","Home","display","flexDirection","justifyContent","flexBasis","margin","LoginForm","showSignup","handleChange","Form","Group","controlId","Label","Control","name","placeholder","onChange","Text","className","Check","label","LoginModal","state","toggleSignup","bind","old_signup","this","setState","event","target","showLogin","closeLoginModal","register","login","Modal","show","onHide","Header","closeButton","Title","Body","Footer","Button","variant","username","password","React","Component","NavBar","isLoggedIn","openLoginModal","logout","Navbar","bg","expand","Brand","alt","Toggle","aria-controls","Collapse","Nav","Link","to","NavDropdown","title","Item","Divider","About","Statistics","copied","data","y","scoreHistory","layout","text","JSON","stringify","onCopy","color","totalTreesPlanted","parseInt","localStorage","removeItem","SettingsReminders","settings","handleSettingsChange","marginTop","Object","keys","map","key","NotificationContainer","ignore","setTimeout","handleButtonClick","e","tag","playSound","filename","getElementById","play","now","Date","options","body","notificationText","icon","lang","dir","sound","swRegistration","getNotifications","then","notifications","notSupported","handleNotSupported","onPermissionGranted","handlePermissionGranted","onPermissionDenied","handlePermissionDenied","onShow","handleNotificationOnShow","handleNotificationOnClick","onClose","handleNotificationOnClose","onError","handleNotificationOnError","timeout","preload","hidden","autostart","loop","posenet","lineWidth","isMobile","test","navigator","userAgent","toTuple","x","drawPoint","ctx","r","beginPath","arc","Math","PI","fillStyle","fill","drawSegment","scale","ay","ax","by","bx","moveTo","lineTo","strokeStyle","stroke","drawSkeleton","keypoints","minConfidence","forEach","drawKeypoints","i","length","keypoint","score","eucli","require","isElectron","videoWidth","videoHeight","setupCamera","a","async","mediaDevices","getUserMedia","Error","video","mobile","facingMode","undefined","stream","srcObject","Promise","resolve","onloadedmetadata","loadVideo","guiState","algorithm","input","architecture","outputStride","inputResolution","multiplier","quantBytes","singlePoseDetection","minPoseConfidence","minPartConfidence","multiPoseDetection","maxPoseDetections","nmsRadius","output","showSkeleton","showPoints","showBoundingBox","net","setupGui","cameras","camera","deviceId","detections","calibrated_shoulderDistance","calibrate","setCalibrationValue","fixCalibration","calibrationCounter","calibration_values","interval","setInterval","push","filter","reduce","b","setItem","clearInterval","detectPoseInRealTime","setValue","getStopped","canvas","getContext","flipPoseHorizontal","isCalibrated","calibrateAndSet","prev_noseDistance","getItem","prev_shoulderDistance","poseDetectionFrame","poses","estimatePoses","flipHorizontal","decodingMethod","maxDetections","scoreThreshold","allPoses","concat","mainPose","getMiddlePoint","leftEyePosition","getPosition","detection","getDetection","rightEyePosition","leftShoulderPosition","rightShoulderPosition","shoulderDistance","shoulderMiddlePoint","nosePosition","leftEarScore","rightEarScore","updateDetection","clearRect","save","translate","drawImage","restore","sleep","ms","App","newstate","new_count","new_calibration","attentionTimeseries","breakTimeseries","showNotificiation","breakStarted","lookingAwayStarted","maxWorkTime","maxWorkTimeReminderInterval","maxBreakTime","maxScreenTime","maxScreenTimeReminderInterval","maxLookingAwayTime","incrementWorkingTime","incrementScreenTime","incrementBreakTime","incrementLookAwayTime","new_workingTime","new_breakTime","new_lookingAtScreen","new_lookingAway","token","saved_username","prev_aggregatedPoseScore","prev_totalTreesPlanted","prev_settings","parse","prev_scoreHistory","split","setIsLoaded","imageScaleFactor","modelUrl","info","textContent","bindPage","new_value","new_currentPoseScore","old_aggregatedPoseScore","isNaN","added_score","max","new_aggregatedPoseScore","new_attentionTimeseries","new_breakTimeseries","new_scoreHistory","getSum","total","boolean","slice","new_totalTreesPlanted","startCounters","saved_password","alert","new_settings","RouteSwitch","VideoContainerRouter","withRouter","athome","location","pathname","left","SettingsAccount","SettingsUI","path","Boolean","hostname","match","ReactDOM","render","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.590536a3.chunk.js","sourcesContent":["import React from 'react';\nimport tree1 from '../images/treeb1.jpg' /* seems to be an issue with Es6 import of images in electron */\nimport tree2 from '../images/treeb2.jpg'\nimport tree3 from '../images/treeb3.jpg'\nimport tree4 from '../images/treeb4.jpg'\nimport tree5 from '../images/treeb5.jpg'\nimport sun1 from '../images/sunb1.jpg'\nimport sun2 from '../images/sunb2.jpg'\nimport sun3 from '../images/sunb3.jpg'\nimport sun4 from '../images/sunb4.jpg'\nimport sun5 from '../images/sunb5.jpg'\n\nconst isElectron = (window && window.process && window.process.type) === \"renderer\";\nif(isElectron){\n    const tree1 = \"./images/treeb1.jpg\";\n    const tree2 = \"./images/treeb2.jpg\";\n    const tree3 = \"./images/treeb3.jpg\";\n    const tree4 = \"./images/treeb4.jpg\";\n    const tree5 = \"./images/treeb5.jpg\";\n    const sun1 = \"./images/sunb1.jpg\";\n    const sun2 = \"./images/sunb2.jpg\";\n    const sun3 = \"./images/sunb3.jpg\";\n    const sun4 = \"./images/sunb4.jpg\";\n    const sun5 = \"./images/sunb5.jpg\";\n}\n\nfunction TreeUI (props) {\n    const {\n      aggregatedPoseScore, \n      currentPoseScore\n    } = props;\n    return (\n      <div style={{border: \"solid thin black\", width: \"600px\", height: \"400px\", position: \"relative\"}}>\n        <div>\n          <TreeComponent aggregatedPoseScore={aggregatedPoseScore} />\n        </div>\n        <div>\n          <SunComponent currentPoseScore={currentPoseScore} />\n        </div>\n      </div>\n    )\n  }\n  \nfunction TreeComponent (props) {\n    const {aggregatedPoseScore} = props;\n    let img_src;\n    console.log(aggregatedPoseScore < 20)\n    if (aggregatedPoseScore < 20){\n        img_src = tree1; // \"tiny tree\";\n    } else if (aggregatedPoseScore < 40){\n        img_src = tree2; // \"small tree\";\n    } else if (aggregatedPoseScore < 60){\n        img_src = tree3; //\"big tree\";\n    } else if (aggregatedPoseScore < 80){\n        img_src = tree4; // \"huge tree\";\n    } else {\n        img_src = tree5; //\"You planted a tree!\";\n    }\n    return (\n        <div>\n            <img src={img_src} style={{\n                width: \"350px\", \n                height: \"400px\",\n                objectFit: \"contain\"\n            }}/>\n        </div>\n    )\n}\n\nfunction SunComponent (props) {\n    const {currentPoseScore} = props;\n    let img_src;\n    console.log(currentPoseScore < 20)\n    if (currentPoseScore < 20){\n        img_src = sun1; // \"tiny sun\";\n        document.querySelector('link[rel=\"icon\"]').href=\"sunb1.ico\"\n    } else if (currentPoseScore < 40){\n        img_src = sun2; // \"small sun\";\n        document.querySelector('link[rel=\"icon\"]').href=\"sunb2.ico\"\n    } else if (currentPoseScore < 60){\n        img_src = sun3; // \"big sun\";\n        document.querySelector('link[rel=\"icon\"]').href=\"sunb3.ico\"\n    } else if (currentPoseScore < 80){\n        img_src = sun4; // \"huge sun\";\n        document.querySelector('link[rel=\"icon\"]').href=\"sunb4.ico\"\n    } else {\n        img_src = sun5; // \"Giant sun!\";\n        document.querySelector('link[rel=\"icon\"]').href=\"sunb5.ico\"\n    }\n    return <div>\n        <img src={img_src} \n            style={{\n                width: \"150px\", \n                height: \"150px\", \n                position: \"absolute\",\n                top: \"0px\",\n                right: \"0px\",\n                objectFit: \"cover\"\n            }}/> \n        </div>\n}\n\nexport default TreeUI;","import React from 'react';\n\nfunction DetectionOverview(props){\n    const {\n      isstarted, \n      isstopped, \n      isloaded, \n      showVideo, \n      count, \n      startDetection, \n      toggleStopped, \n      toggleVideo\n    } = props;\n    const noseDistance = props.value.noseDistance;\n    const pose_score = noseDistance - (props.calibrated_noseDistance) + 25;\n    return (\n      <div style={{border: \"solid thin black\", width: \"250px\"}}>\n        <h5>Current pose</h5>\n        { (props.value && props.value.onBreak != true) ?\n        <div style={{textAlign: \"left\", padding: \"10px\"}}>\n          <div>Pose score: {pose_score.toFixed(2)}</div>\n          <div>Slouching? {props.value.isSlough ? \"yes\" : \"no\"}</div>\n          <div>Attention? {(props.value.noAttention == false) ? \"yes\" : \"no\"}</div> \n          <div>Distance to screen: {props.value.screenDistance.toFixed(2)} </div>\n          <div>Working time: {props.workingTime}</div>\n          <div>Looking at screen: {props.lookingAtScreen}</div>\n          {props.lookingAway > 0 ? \n            <div>Looking away time: {props.lookingAway}</div> : \"\"}\n        </div>\n        : \"\"}\n        { (props.value && props.value.onBreak == true) ? \n        <div>\n          <div>Taking a break</div>\n          {props.breakTime > 0 ? \n            <div>Break time: {props.breakTime}</div> : \"\"} \n        </div>\n        : \"\"}\n          \n      </div>\n    )\n  }\n//noseDistance < (calibrated_noseDistance - 25)\nexport default DetectionOverview;\n\n","import React from 'react';\n\nfunction DetectionUI(props){\n    const {\n      isstarted, \n      isstopped, \n      isloaded, \n      showVideo, \n      count, \n      startDetection, \n      toggleStopped, \n      toggleVideo,\n      recalibrate\n    } = props;\n    return (\n      <div style={{border: \"solid thin black\", width: \"250px\"}}>\n        {isstarted == false ? \n          <button onClick={startDetection}>Start detection</button>\n        : \n        <button onClick={toggleStopped}>\n          {isstopped == false ? \"Stop\" : \"Restart\"} detection\n        </button>\n        }\n        <button onClick={toggleVideo}>\n          Show {showVideo == false ? \"video\" : \"tree\"}\n        </button>\n        {isstarted == true ?\n          <button onClick={recalibrate}>\n            Recalibrate\n          </button> : \"\"}\n        <div id=\"info\"></div>\n        {isstarted == true ?\n          <div>\n            {isloaded == false ? \"Loading model..\" : \n            count != 0 ?`Calibrating.. ${count}` :\n            \"calibrated\"\n            }\n          </div> : \"\"\n        }\n      </div> \n    )\n  }\n\nexport default DetectionUI;","import React from 'react';\nimport TreeUI from './TreeUI'\nimport DetectionOverview from './DetectionOverview'\nimport DetectionUI from './DetectionUI'\n\nfunction Home(props) {\n    console.log(props);\n    return (\n      <div id=\"home-container\">\n        <h2>Home - Plant trees!</h2>\n        <div style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"space-around\"}}>\n          <div style={{flexBasis: \"30%\"}}>\n            <div style={{margin: \"auto\", width: \"250px\"}}>\n              <DetectionUI \n                {...props}\n              />\n            </div>\n            { (props.isstarted === true) ? \n              <div style={{margin: \"20px auto\", width: \"250px\"}}>\n                <DetectionOverview \n                  {...props}\n                /> \n              </div> \n              : \"\"\n            } \n          </div>\n          <div style={{flexBasis: \"70%\"}}>\n          {props.showVideo === false ?\n            <TreeUI \n              aggregatedPoseScore={props.aggregatedPoseScore}\n              currentPoseScore={props.currentPoseScore}\n            /> : \"\"}\n          </div>\n        </div>\n      </div>\n    )\n  }\n\nexport default Home;\n  ","import React from 'react';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nclass LoginModal extends React.Component {\n    constructor(props) {\n      super(props);\n      // Don't call this.setState() here!\n      this.state = { showSignup: false };\n      this.toggleSignup = this.toggleSignup.bind(this);\n      this.handleChange = this.handleChange.bind(this);\n    }\n  \n    toggleSignup(){\n      const old_signup = this.state.showSignup;\n      this.setState({showSignup: !old_signup});\n    }\n  \n    handleChange(event){\n      this.setState({[event.target.name]: event.target.value});\n    }\n  \n    render (){\n      const {\n        showLogin,\n        closeLoginModal,\n        register,\n        login\n      } = this.props;\n      const showSignup = this.state.showSignup;\n      return (\n        <Modal show={showLogin} onHide={closeLoginModal}>\n          <Modal.Header closeButton>\n            <Modal.Title>{ showSignup ? \"Signup\" : \"Login\" }</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <LoginForm \n              {...this.props} \n              showSignup={showSignup} \n              handleChange={this.handleChange}\n            />\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={closeLoginModal}>\n              Close\n            </Button>\n            { showSignup ? \n            <Button variant=\"primary\" onClick={\n              () => {\n                register(this.state.username, this.state.password);\n              }}\n              >\n              Register\n            </Button> :\n            <Button variant=\"primary\" onClick={\n              () => {\n                login(this.state.username, this.state.password);\n              }}\n              >\n              Login\n            </Button>}\n            { (showSignup == false) ? \n              <a href=\"#\" onClick={this.toggleSignup}>register</a> :\n              <a href=\"#\" onClick={this.toggleSignup}>login</a>\n            }\n          </Modal.Footer>\n        </Modal>\n      );\n    }\n  }\n  \nfunction LoginForm(props) {\n    const {showSignup, handleChange} = props;\n    return (\n      <Form>\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Email address</Form.Label>\n          <Form.Control \n            type=\"email\"\n            name=\"username\"\n            placeholder=\"Enter email\"\n            onChange={handleChange}\n          />\n          {showSignup ?\n            <Form.Text className=\"text-muted\">\n              We'll never share your email with anyone else.\n            </Form.Text>\n            : \"\"}\n        </Form.Group>\n        <Form.Group controlId=\"formBasicPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control \n            type=\"password\" \n            name=\"password\"\n            placeholder=\"Password\" \n            onChange={handleChange}\n          />\n        </Form.Group>\n        {showSignup ?\n          <Form.Group controlId=\"formBasicCheckbox\">\n            <Form.Check type=\"checkbox\" label=\"I agree to the T&C\" />\n          </Form.Group>\n          : \"\"}\n      </Form>\n    ); \n  }\n\nexport default LoginModal;","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport {\n    Link\n  } from \"react-router-dom\";\n\nfunction NavBar (props) {\n    const {isLoggedIn, username, openLoginModal, logout} = props;\n    return (\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand>\n          <img\n            alt=\"\"\n            src=\"/logo.svg\"\n            width=\"30\"\n            height=\"30\"\n            className=\"d-inline-block align-top\"\n          />{' '}\n          Poseguard\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link><Link to=\"/home\">Home</Link></Nav.Link>\n            <Nav.Link><Link to=\"/about\">About</Link></Nav.Link>\n            {isLoggedIn ? \n            <NavDropdown title=\"My Account\" id=\"basic-nav-dropdown\">\n              <NavDropdown.Item><Link to=\"/settings/account\">Account settings</Link></NavDropdown.Item>\n              <NavDropdown.Item><Link to=\"/settings/reminders\">Reminder Settings</Link></NavDropdown.Item>\n              <NavDropdown.Item><Link to=\"/settings/ui\">UI Settings</Link></NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item><Link to=\"/statistics\">Statistics</Link></NavDropdown.Item>\n            </NavDropdown> : \"\"}\n          </Nav>\n        </Navbar.Collapse>\n        <Navbar.Collapse className=\"justify-content-end\">\n          {isLoggedIn ? \n            <Navbar.Text>\n              Signed in as: {username} - <a onClick={logout}>Logout</a>\n            </Navbar.Text> :\n            <Navbar.Text>\n              <a onClick={openLoginModal}>Login</a>\n            </Navbar.Text>\n          }\n        </Navbar.Collapse>\n      </Navbar>\n    )\n  }\n\nexport default NavBar;","import React from 'react';\n\nfunction About() {\n    return (\n      <div>\n        <h2>About</h2>\n        <div>explanation of poseguard, how it works and so on</div>\n      </div>\n    );\n  }\n\nexport default About;","import React from 'react';\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\nimport Plot from 'react-plotly.js';\nclass Statistics extends React.Component {\n  constructor(props) {\n    super(props);\n    // Don't call this.setState() here!\n    this.state = { copied: false };\n  }\n  \n  render(){\n    return (\n      <div>\n        <h2>Statistics</h2>\n        <div>explanation of poseguard, how it works and so on</div>\n        <div>shows the statistics, some graphs about used how many times, \n        for how long and the improvement of posture over time.\n      </div>\n      <Plot\n        data={[\n          {type: 'line', y: this.props.scoreHistory},\n        ]}\n        layout={ {width: 500, height: 300, title: 'Score history graph'} }\n      />\n      <div>Export your score history</div>\n      <CopyToClipboard text={JSON.stringify(this.props.scoreHistory)}\n          onCopy={() => this.setState({copied: true})}>\n          <button>Copy to clipboard with button</button>\n      </CopyToClipboard>\n      {' '} {this.state.copied ? <span style={{color: 'red'}}>Copied.</span> : null}\n      <div>Total trees planted: {this.props.totalTreesPlanted}</div>\n      <div>Current progress: {parseInt(this.props.aggregatedPoseScore)}/100</div>\n      <button \n        onClick={() => \n          localStorage.removeItem(\"totalTreesPlanted\")\n        }>Clear statistics</button>\n      </div>\n    );\n  }\n}\n\nexport default Statistics;","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nclass SettingsReminders extends React.Component{\n    constructor(props) {\n        super(props);\n        // Don't call this.setState() here!\n        this.state = { };\n      }\n\n    render(){\n        const settings = this.props.settings;\n        const handleSettingsChange = this.props.handleSettingsChange;\n        return (\n            <div>\n                <h2>Reminder Settings</h2>\n                <div>Settings about frequency of reminders (all in seconds)</div>\n                <div style={{width: \"300px\", margin: \"auto\", marginTop: \"50px\", textAlign: \"left\"}}>\n                    {Object.keys(settings).map(\n                        (key) => {\n                            return (\n                                <Form>\n                                    <Form.Group controlId=\"formBasicEmail\">\n                                        <Form.Label>{key}</Form.Label>\n                                        <Form.Control \n                                            type=\"number\"\n                                            name={key}\n                                            placeholder={settings[key]}\n                                            onChange={handleSettingsChange}\n                                        />\n                                    </Form.Group>\n                                </Form> \n                            )\n                        }\n                    )}\n                </div>\n            </div>\n          );\n    }\n   \n}\n\nexport default SettingsReminders;","import React from 'react';\nimport ReactDom from 'react-dom';\nimport Notification from 'react-web-notification';\n\nclass NotificationContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ignore: true,\n      title: ''\n    };\n\n    setTimeout(()=>this.handleButtonClick(), 10);\n  }\n\n  handlePermissionGranted(){\n    console.log('Permission Granted');\n    this.setState({\n      ignore: false\n    });\n  }\n  handlePermissionDenied(){\n    console.log('Permission Denied');\n    this.setState({\n      ignore: true\n    });\n  }\n  handleNotSupported(){\n    console.log('Web Notification not Supported');\n    this.setState({\n      ignore: true\n    });\n  }\n\n  handleNotificationOnClick(e, tag){\n    console.log(e, 'Notification clicked tag:' + tag);\n  }\n\n  handleNotificationOnError(e, tag){\n    console.log(e, 'Notification error tag:' + tag);\n  }\n\n  handleNotificationOnClose(e, tag){\n    console.log(e, 'Notification closed tag:' + tag);\n  }\n\n  handleNotificationOnShow(e, tag){\n    this.playSound();\n    console.log(e, 'Notification shown tag:' + tag);\n  }\n\n  playSound(filename){\n    document.getElementById('sound').play();\n  }\n\n  handleButtonClick() {\n\n    if(this.state.ignore) {\n      return;\n    }\n\n    const now = Date.now();\n\n    const title = 'Poseguard ' + now;\n    const body = this.props.notificationText;\n    const tag = now;\n    const icon = 'http://mobilusoss.github.io/react-web-notification/example/Notifications_button_24.png';\n    // const icon = 'http://localhost:3000/Notifications_button_24.png';\n\n    // Available options\n    // See https://developer.mozilla.org/en-US/docs/Web/API/Notification/Notification\n    const options = {\n      tag: tag,\n      body: body,\n      icon: icon,\n      lang: 'en',\n      dir: 'ltr',\n      sound: './sound.mp3'  // no browsers supported https://developer.mozilla.org/en/docs/Web/API/notification/sound#Browser_compatibility\n    }\n    this.setState({\n      title: title,\n      options: options\n    });\n  }\n\n  handleButtonClick2() {\n    this.props.swRegistration.getNotifications({}).then(function(notifications) {\n      console.log(notifications);\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Notification\n          ignore={this.state.ignore && this.state.title !== ''}\n          notSupported={this.handleNotSupported.bind(this)}\n          onPermissionGranted={this.handlePermissionGranted.bind(this)}\n          onPermissionDenied={this.handlePermissionDenied.bind(this)}\n          onShow={this.handleNotificationOnShow.bind(this)}\n          onClick={this.handleNotificationOnClick.bind(this)}\n          onClose={this.handleNotificationOnClose.bind(this)}\n          onError={this.handleNotificationOnError.bind(this)}\n          timeout={5000}\n          title={this.state.title}\n          options={this.state.options}\n          swRegistration={this.props.swRegistration}\n        />\n        <audio id='sound' preload='auto'>\n          <source src='./sound.mp3' type='audio/mpeg' />\n          <source src='./sound.ogg' type='audio/ogg' />\n          <embed hidden={true} autostart='false' loop={false} src='./sound.mp3' />\n        </audio>\n      </div>\n    )\n  }\n};\n\nexport default NotificationContainer;","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport * as posenet from '@tensorflow-models/posenet'\n//import { singlePose } from '@tensorflow-models/posenet'\nimport * as tf from '@tensorflow/tfjs'\n\nconsole.log(posenet);\n\nconst color = 'aqua'\nconst boundingBoxColor = 'red'\nconst lineWidth = 2\n\nexport const tryResNetButtonName = 'tryResNetButton'\nexport const tryResNetButtonText = '[New] Try ResNet50'\nconst tryResNetButtonTextCss = 'width:100%;text-decoration:underline;'\nconst tryResNetButtonBackgroundCss = 'background:#e61d5f;'\n\nfunction isAndroid () {\n  return /Android/i.test(navigator.userAgent)\n}\n\nfunction isiOS () {\n  return /iPhone|iPad|iPod/i.test(navigator.userAgent)\n}\n\nexport function isMobile () {\n  return isAndroid() || isiOS()\n}\n\nfunction setDatGuiPropertyCss (propertyText, liCssString, spanCssString = '') {\n  var spans = document.getElementsByClassName('property-name')\n  for (var i = 0; i < spans.length; i++) {\n    var text = spans[i].textContent || spans[i].innerText\n    if (text === propertyText) {\n      spans[i].parentNode.parentNode.style = liCssString\n      if (spanCssString !== '') {\n        spans[i].style = spanCssString\n      }\n    }\n  }\n}\n\nexport function updateTryResNetButtonDatGuiCss () {\n  setDatGuiPropertyCss(\n    tryResNetButtonText, tryResNetButtonBackgroundCss,\n    tryResNetButtonTextCss)\n}\n\n/**\n * Toggles between the loading UI and the main canvas UI.\n */\nexport function toggleLoadingUI (\n  showLoadingUI, loadingDivId = 'loading', mainDivId = 'main') {\n  if (showLoadingUI) {\n    document.getElementById(loadingDivId).style.display = 'block'\n    document.getElementById(mainDivId).style.display = 'none'\n  } else {\n    document.getElementById(loadingDivId).style.display = 'none'\n    document.getElementById(mainDivId).style.display = 'block'\n  }\n}\n\nfunction toTuple ({ y, x }) {\n  return [y, x]\n}\n\nexport function drawPoint (ctx, y, x, r, color) {\n  ctx.beginPath()\n  ctx.arc(x, y, r, 0, 2 * Math.PI)\n  ctx.fillStyle = color\n  ctx.fill()\n}\n\n/**\n * Draws a line on a canvas, i.e. a joint\n */\nexport function drawSegment ([ay, ax], [by, bx], color, scale, ctx) {\n  ctx.beginPath()\n  ctx.moveTo(ax * scale, ay * scale)\n  ctx.lineTo(bx * scale, by * scale)\n  ctx.lineWidth = lineWidth\n  ctx.strokeStyle = color\n  ctx.stroke()\n}\n\n/**\n * Draws a pose skeleton by looking up all adjacent keypoints/joints\n */\nexport function drawSkeleton (keypoints, minConfidence, ctx, scale = 1) {\n  const adjacentKeyPoints =\n      posenet.getAdjacentKeyPoints(keypoints, minConfidence)\n\n  adjacentKeyPoints.forEach((keypoints) => {\n    drawSegment(\n      toTuple(keypoints[0].position), toTuple(keypoints[1].position), color,\n      scale, ctx)\n  })\n}\n\n/**\n * Draw pose keypoints onto a canvas\n */\nexport function drawKeypoints (keypoints, minConfidence, ctx, scale = 1) {\n  for (let i = 0; i < keypoints.length; i++) {\n    const keypoint = keypoints[i]\n\n    if (keypoint.score < minConfidence) {\n      continue\n    }\n\n    const { y, x } = keypoint.position\n    drawPoint(ctx, y * scale, x * scale, 3, color)\n  }\n}\n\n/**\n * Draw the bounding box of a pose. For example, for a whole person standing\n * in an image, the bounding box will begin at the nose and extend to one of\n * ankles\n */\nexport function drawBoundingBox (keypoints, ctx) {\n  const boundingBox = posenet.getBoundingBox(keypoints)\n\n  ctx.rect(\n    boundingBox.minX, boundingBox.minY, boundingBox.maxX - boundingBox.minX,\n    boundingBox.maxY - boundingBox.minY)\n\n  ctx.strokeStyle = boundingBoxColor\n  ctx.stroke()\n}\n\n/**\n * Converts an arary of pixel data into an ImageData object\n */\nexport async function renderToCanvas (a, ctx) {\n  const [height, width] = a.shape\n  const imageData = new ImageData(width, height)\n\n  const data = await a.data()\n\n  for (let i = 0; i < height * width; ++i) {\n    const j = i * 4\n    const k = i * 3\n\n    imageData.data[j + 0] = data[k + 0]\n    imageData.data[j + 1] = data[k + 1]\n    imageData.data[j + 2] = data[k + 2]\n    imageData.data[j + 3] = 255\n  }\n\n  ctx.putImageData(imageData, 0, 0)\n}\n\n/**\n * Draw an image on a canvas\n */\nexport function renderImageToCanvas (image, size, canvas) {\n  canvas.width = size[0]\n  canvas.height = size[1]\n  const ctx = canvas.getContext('2d')\n\n  ctx.drawImage(image, 0, 0)\n}\n\n/**\n * Draw heatmap values, one of the model outputs, on to the canvas\n * Read our blog post for a description of PoseNet's heatmap outputs\n * https://medium.com/tensorflow/real-time-human-pose-estimation-in-the-browser-with-tensorflow-js-7dd0bc881cd5\n */\nexport function drawHeatMapValues (heatMapValues, outputStride, canvas) {\n  const ctx = canvas.getContext('2d')\n  const radius = 5\n  const scaledValues = heatMapValues.mul(tf.scalar(outputStride, 'int32'))\n\n  drawPoints(ctx, scaledValues, radius, color)\n}\n\n/**\n * Used by the drawHeatMapValues method to draw heatmap points on to\n * the canvas\n */\nfunction drawPoints (ctx, points, radius, color) {\n  const data = points.buffer().values\n\n  for (let i = 0; i < data.length; i += 2) {\n    const pointY = data[i]\n    const pointX = data[i + 1]\n\n    if (pointX !== 0 && pointY !== 0) {\n      ctx.beginPath()\n      ctx.arc(pointX, pointY, radius, 0, 2 * Math.PI)\n      ctx.fillStyle = color\n      ctx.fill()\n    }\n  }\n}\n\n/**\n * Draw offset vector values, one of the model outputs, on to the canvas\n * Read our blog post for a description of PoseNet's offset vector outputs\n * https://medium.com/tensorflow/real-time-human-pose-estimation-in-the-browser-with-tensorflow-js-7dd0bc881cd5\n */\nexport function drawOffsetVectors (\n  heatMapValues, offsets, outputStride, scale = 1, ctx) {\n  const offsetPoints = {};\n      //singlePose.getOffsetPoints(heatMapValues, outputStride, offsets)\n\n  console.log(posenet)\n  const heatmapData = heatMapValues.buffer().values\n  const offsetPointsData = offsetPoints.buffer().values\n\n  for (let i = 0; i < heatmapData.length; i += 2) {\n    const heatmapY = heatmapData[i] * outputStride\n    const heatmapX = heatmapData[i + 1] * outputStride\n    const offsetPointY = offsetPointsData[i]\n    const offsetPointX = offsetPointsData[i + 1]\n\n    drawSegment(\n      [heatmapY, heatmapX], [offsetPointY, offsetPointX], color, scale, ctx)\n  }\n}","/* eslint-disable */\n\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport * as posenet from '@tensorflow-models/posenet';\nconst eucli = require('eucli');\nimport { drawBoundingBox, drawKeypoints, drawSkeleton, isMobile, tryResNetButtonName, tryResNetButtonText, updateTryResNetButtonDatGuiCss } from './demo_util'\n\nconst isElectron = (window && window.process && window.process.type) === \"renderer\";\nconsole.log(isElectron)\n/// cannot compile this, only activate for electron build\n/// import * as tf from '@tensorflow/tfjs-node';\n\nconst videoWidth = 600\nconst videoHeight = 500\n\n/**\n * Loads a the camera to be used in the demo\n *\n */\nasync function setupCamera () {\n  if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n    throw new Error(\n      'Browser API navigator.mediaDevices.getUserMedia not available')\n  }\n\n  const video = document.getElementById('video')\n  video.width = videoWidth\n  video.height = videoHeight\n\n  const mobile = isMobile()\n  const stream = await navigator.mediaDevices.getUserMedia({\n    'audio': false,\n    'video': {\n      facingMode: 'user',\n      width: mobile ? undefined : videoWidth,\n      height: mobile ? undefined : videoHeight\n    }\n  })\n  video.srcObject = stream\n\n  return new Promise((resolve) => {\n    video.onloadedmetadata = () => {\n      resolve(video)\n    }\n  })\n}\n\nasync function loadVideo () {\n  const video = await setupCamera()\n  video.play()\n\n  return video\n}\n\nconst defaultQuantBytes = 2\n\nconst defaultResNetMultiplier = 1.0\nconst defaultResNetStride = 32\nconst defaultResNetInputResolution = 257\n\nconst guiState = {\n  algorithm: 'multi-pose',\n  input: {\n    architecture: 'ResNet50',\n    outputStride: defaultResNetStride,\n    inputResolution: defaultResNetInputResolution,\n    multiplier: defaultResNetMultiplier,\n    quantBytes: defaultQuantBytes\n  },\n  singlePoseDetection: {\n    minPoseConfidence: 0.1,\n    minPartConfidence: 0.5\n  },\n  multiPoseDetection: {\n    maxPoseDetections: 5,\n    minPoseConfidence: 0.15,\n    minPartConfidence: 0.1,\n    nmsRadius: 30.0\n  },\n  output: {\n    showVideo: true,\n    showSkeleton: true,\n    showPoints: true,\n    showBoundingBox: false\n  },\n  net: null\n}\n\n/**\n * Sets up dat.gui controller on the top-right of the window\n */\nfunction setupGui (cameras, net) {\n  guiState.net = net\n\n  if (cameras.length > 0) {\n    guiState.camera = cameras[0].deviceId\n  }\n\n  return;\n}\n\n/* global variables shared between calibrate and detectPose */\nlet detections = {}\nlet calibrated_noseDistance = 150\nlet calibrated_shoulderDistance = 320\n\nexport function calibrate(setCalibrationValue, fixCalibration){\n  let calibrationCounter = 5;\n  let calibration_values = []\n  setCalibrationValue(calibrationCounter);\n\n  const interval = setInterval(() => {\n    calibration_values.push(detections)\n\n    calibrationCounter -= 1\n    setCalibrationValue(calibrationCounter)\n    if (calibrationCounter == 0) {\n      calibration_values = calibration_values.filter((x) => { return Object.keys(x).length !== 0 })\n      calibrated_noseDistance = calibration_values.map((x) => { return x['noseDistance'] }).reduce((a, b) => { return a + b }) / calibration_values.length\n      calibrated_shoulderDistance = calibration_values.map((x) => { return x['shoulderDistance'] }).reduce((a, b) => { return a + b }) / calibration_values.length\n      fixCalibration({\n        calibrated_noseDistance,\n        calibrated_shoulderDistance\n      });\n      localStorage.setItem(\"calibrated_noseDistance\", calibrated_noseDistance);\n      localStorage.setItem(\"calibrated_shoulderDistance\", calibrated_shoulderDistance);\n      clearInterval(interval)\n    }\n  }, 1000)\n}\n\n/**\n * Feeds an image to posenet to estimate poses - this is where the magic\n * happens. This function loops with a requestAnimationFrame method.\n */\n\nconst detectPoseInRealTime = (video, net, setValue, setCalibrationValue, fixCalibration, getStopped) => {\n  // console.log('detectPoseInRealTime');\n  const canvas = document.getElementById('output')\n  const ctx = canvas.getContext('2d')\n\n  // since images are being fed from a webcam, we want to feed in the\n  // original image and then just flip the keypoints' x coordinates. If instead\n  // we flip the image, then correcting left-right keypoint pairs requires a\n  // permutation on all the keypoints.\n  const flipPoseHorizontal = true\n\n  canvas.width = videoWidth\n  canvas.height = videoHeight\n\n  let isCalibrated = false\n\n  const calibrateAndSet = () => {\n    if (isCalibrated == false) {\n      isCalibrated = true;\n\n      const prev_noseDistance = localStorage.getItem(\"calibrated_noseDistance\");\n      const prev_shoulderDistance = localStorage.getItem(\"calibrated_shoulderDistance\");  \n      if(prev_noseDistance && prev_shoulderDistance){\n        calibrated_noseDistance = prev_noseDistance;\n        calibrated_shoulderDistance = prev_shoulderDistance;\n        fixCalibration({\n          calibrated_noseDistance,\n          calibrated_shoulderDistance\n        });\n        setCalibrationValue(0);\n      }\n      else {\n        calibrate(setCalibrationValue, fixCalibration);\n      }\n    }\n  }\n\n  /// /document.querySelector('#eye_distance').innerHTML = JSON.stringify(eyeDistance);\n\n  async function poseDetectionFrame () {\n    // console.log('poseDetectionFrame');\n    calibrateAndSet() // depends on global variable calibrationCounter\n\n    let poses = []\n    let minPoseConfidence\n    let minPartConfidence\n\n    if(getStopped() == false){\n        //console.log(getStopped());\n\n        switch (guiState.algorithm) {\n          case 'single-pose':\n            break\n          case 'multi-pose':\n\n            // console.log('case multi-pose');\n            // https://js.tensorflow.org/api/1.0.0/#browser.fromPixels\n            // in node it must be canvas\n            const isElectron = (window && window.process && window.process.type) === \"renderer\";\n            let input;\n            if(false){ // cannot compile this with webpack somehow\n              //input = tf.browser.fromPixels(canvas);\n            }\n            else{\n              input = video;\n            }\n\n            let allPoses = await guiState.net.estimatePoses(input, {\n              flipHorizontal: flipPoseHorizontal,\n              decodingMethod: 'multi-person',\n              maxDetections: guiState.multiPoseDetection.maxPoseDetections,\n              scoreThreshold: guiState.multiPoseDetection.minPartConfidence,\n              nmsRadius: guiState.multiPoseDetection.nmsRadius\n            })\n\n            poses = poses.concat(allPoses)\n\n            /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n            let onBreak = false\n            // do calculations with keypoint values\n            if (poses.length == 0) {\n              onBreak = true\n              // //console.log(onBreak);\n              // document.querySelector('#on_break').innerHTML = JSON.stringify(onBreak);\n              setValue({\n                onBreak\n              })\n              break\n            } else {\n              onBreak = false\n              // //console.log(onBreak);\n              // document.querySelector('#on_break').innerHTML = JSON.stringify(onBreak);\n            }\n            // console.log({onBreak, l: poses.length})\n\n            const mainPose = poses[0] // assuming the pose with highest confidence comes first\n            // //console.log(mainPose);\n            // document.querySelector('#current_poses').innerHTML = JSON.stringify(mainPose['score']);\n\n            const keypoints = mainPose['keypoints']\n            function getDetection (keypoints, name) {\n              return keypoints.filter(function (x) {\n                return x['part'] == name\n              })\n            }\n\n            function getPosition (detection) {\n              return [detection[0]['position']['x'], detection[0]['position']['y']]\n            }\n\n            function getMiddlePoint (a, b) {\n              return [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2]\n            }\n\n            const leftEyePosition = getPosition(getDetection(keypoints, 'leftEye'))\n            const rightEyePosition = getPosition(getDetection(keypoints, 'rightEye'))\n            const eyeDistance = eucli(leftEyePosition, rightEyePosition)\n            // console.log(eyeDistance);\n            // document.querySelector('#eye_distance').innerHTML = JSON.stringify(eyeDistance);\n\n            const leftShoulderPosition = getPosition(getDetection(keypoints, 'leftShoulder'))\n            const rightShoulderPosition = getPosition(getDetection(keypoints, 'rightShoulder'))\n\n            const shoulderDistance = eucli(leftShoulderPosition, rightShoulderPosition)\n            // console.log(shoulderDistance);\n            // document.querySelector('#shoulder_distance').innerHTML = JSON.stringify(shoulderDistance);\n\n            const shoulderMiddlePoint = getMiddlePoint(leftShoulderPosition, rightShoulderPosition)\n            const nosePosition = getPosition(getDetection(keypoints, 'nose'))\n            const noseDistance = eucli(nosePosition, shoulderMiddlePoint)\n            // console.log(noseDistance);\n            // document.querySelector('#nose_distance').innerHTML = JSON.stringify(noseDistance);\n            const isSlough = noseDistance < (calibrated_noseDistance - 25) // 150 or calibration distance - 20\n            // document.querySelector('#is_sloughing').innerHTML = JSON.stringify(isSlough);\n\n            const screenDistance = (0.5 * calibrated_shoulderDistance) / shoulderDistance // 320 or calibration distance\n            // console.log(screenDistance);\n            // document.querySelector('#screen_distance').innerHTML = JSON.stringify(screenDistance);\n\n            const leftEarScore = getDetection(keypoints, 'leftEar')[0]['score']\n            const rightEarScore = getDetection(keypoints, 'rightEar')[0]['score']\n            // console.log('attention evaluation');\n            // console.log(leftEarScore);\n            // console.log(leftEarScore < 0.3);\n            // console.log(rightEarScore);\n            // console.log(rightEarScore < 0.3);\n            const noAttention = (leftEarScore < 0.3) || (rightEarScore < 0.3) // could also use minPartConfidence\n            // console.log(noAttention);\n            // document.querySelector('#no_attention').innerHTML = JSON.stringify(noAttention);\n\n            function updateDetection () {\n              return {\n                keypoints, // not necessary\n                shoulderDistance, // not necessary\n                screenDistance,\n                noseDistance, // not necessary\n                isSlough,\n                noAttention,\n                onBreak\n              }\n            }\n            detections = updateDetection()\n            setValue(detections)\n            // console.log(detections);\n\n            /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n            minPoseConfidence = +guiState.multiPoseDetection.minPoseConfidence\n            minPartConfidence = +guiState.multiPoseDetection.minPartConfidence\n            break\n        }\n\n        ctx.clearRect(0, 0, videoWidth, videoHeight)\n\n        if (guiState.output.showVideo) {\n          ctx.save()\n          ctx.scale(-1, 1)\n          ctx.translate(-videoWidth, 0)\n          ctx.drawImage(video, 0, 0, videoWidth, videoHeight)\n          ctx.restore()\n        }\n\n        // For each pose (i.e. person) detected in an image, loop through the poses\n        // and draw the resulting skeleton and keypoints if over certain confidence\n        // scores\n        poses.forEach(({ score, keypoints }) => {\n          if (score >= minPoseConfidence) {\n            if (guiState.output.showPoints) {\n              drawKeypoints(keypoints, minPartConfidence, ctx)\n            }\n            if (guiState.output.showSkeleton) {\n              drawSkeleton(keypoints, minPartConfidence, ctx)\n            }\n          }\n        })\n\n    }\n    else{\n      // check every second if restarted\n      function sleep(ms) {\n        return new Promise(resolve => setTimeout(resolve, ms));\n      }\n      await sleep(1000);\n    }\n\n    // don't need real time - requestAnimationFrame does not work in inactive tabs\n    // requestAnimationFrame(poseDetectionFrame)\n    setTimeout(poseDetectionFrame, 1000);\n  }\n\n  poseDetectionFrame()\n}\n\n/**\n * Kicks off the demo by loading the posenet model, finding and loading\n * available camera devices, and setting off the detectPoseInRealTime function.\n */\nexport async function bindPage (setValue, setCalibrationValue, fixCalibration, setIsLoaded, getStopped) {\n  // console.log('bindPage');\n  const net = await posenet.load({\n    imageScaleFactor: 0.2,\n    architecture: guiState.input.architecture,\n    outputStride: guiState.input.outputStride,\n    inputResolution: guiState.input.inputResolution,\n    multiplier: guiState.input.multiplier,\n    quantBytes: guiState.input.quantBytes,\n    modelUrl: './model-stride32.json'\n  })\n  setIsLoaded();\n  // console.log('posenet loaded');\n\n  let video\n\n  try {\n    video = await loadVideo()\n  } catch (e) {\n    let info = document.getElementById('info')\n    info.textContent = 'this browser does not support video capture,' +\n        'or this device does not have a camera'\n    info.style.display = 'block'\n    throw e\n  }\n\n  setupGui([], net)\n  detectPoseInRealTime(video, net, setValue, setCalibrationValue, fixCalibration, getStopped)\n}\n\n\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Home from './components/Home'\nimport LoginModal from './components/LoginModal'\nimport NavBar from './components/NavBar'\nimport About from './components/About'\nimport Statistics from './components/Statistics'\nimport SettingsReminders from './components/SettingsReminders'\nimport NotificationContainer from './components/NotificationContainer'\n\nimport { bindPage } from './demo'\nimport { calibrate } from './demo'\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport {withRouter} from 'react-router-dom';\n\n// check if running in browser or in electron\nconst isElectron = (window && window.process && window.process.type) === \"renderer\";\nconsole.log(isElectron);\n\n// \nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    // Don't call this.setState() here!\n    this.state = { \n      value: 0,\n      count: -1,\n      isloaded: false,\n      isstarted: false,\n      isstopped: false,\n      showVideo: false,\n      aggregatedPoseScore: 0,\n      currentPoseScore: 0,\n      calibrated_noseDistance: 150,\n      calibrated_shoulderDistance: 320,\n      isLoggedIn: false, \n      attentionTimeseries: [],\n      breakTimeseries: [],\n      username: \"\",\n      showNotificiation: false,\n      notificationText: \"hi\",\n      totalTreesPlanted: 0,\n      workingTime: 0,\n      breakTime: 0,\n      lookingAtScreen: 0,\n      lookingAway: 0,\n      breakStarted: false,\n      lookingAwayStarted: false,\n      scoreHistory: [],\n      settings: {\n        maxWorkTime: 100,\n        maxWorkTimeReminderInterval: 10,\n        maxBreakTime: 10,\n        maxScreenTime: 20,\n        maxScreenTimeReminderInterval: 5,\n        maxLookingAwayTime: 20\n      }\n    };\n    this.startDetection = this.startDetection.bind(this);\n    this.login = this.login.bind(this);\n    this.openLoginModal = this.openLoginModal.bind(this);\n    this.closeLoginModal = this.closeLoginModal.bind(this);\n    this.logout = this.logout.bind(this);\n    this.recalibrate = this.recalibrate.bind(this);\n    this.incrementWorkingTime = this.incrementWorkingTime.bind(this);\n    this.incrementScreenTime = this.incrementScreenTime.bind(this);\n    this.incrementBreakTime = this.incrementBreakTime.bind(this);\n    this.incrementLookAwayTime = this.incrementLookAwayTime.bind(this);\n    this.handleSettingsChange = this.handleSettingsChange.bind(this);\n  }\n  \n  startCounters(){\n    // start counters\n    this.incrementWorkingTime();\n    this.incrementScreenTime();\n  }\n\n  incrementWorkingTime(){\n    const new_workingTime = this.state.workingTime + 1;\n    this.setState({workingTime: new_workingTime, breakTime: 0});\n    if(new_workingTime > this.state.settings.maxWorkTime \n      && new_workingTime % this.state.settings.maxWorkTimeReminderInterval == 0){ /// show notification every 10 seconds\n      this.showNotificiation(\"You should take a break!\")\n    }\n\n    if(this.state.breakStarted){\n      setTimeout(this.incrementBreakTime, 1000);\n    }\n    else{\n      setTimeout(this.incrementWorkingTime, 1000);\n    }\n  }\n\n  incrementBreakTime(){\n    const new_breakTime = this.state.breakTime + 1;\n    this.setState({breakTime: new_breakTime});\n    if(new_breakTime == this.state.settings.maxBreakTime){ /// only show notification once\n      // reset counter\n      this.setState({workingTime: 0});\n      this.showNotificiation(\"Break completed successfully!\")\n    }\n\n    if(this.state.breakStarted){\n      setTimeout(this.incrementBreakTime, 1000);\n    }\n    else{\n      setTimeout(this.incrementWorkingTime, 1000);\n    }\n  }\n\n  incrementScreenTime(){\n    const new_lookingAtScreen = this.state.lookingAtScreen + 1;\n    this.setState({lookingAtScreen: new_lookingAtScreen, lookingAway: 0});\n    if(new_lookingAtScreen > this.state.settings.maxScreenTime\n       && new_lookingAtScreen % this.state.settings.maxScreenTimeReminderInterval == 0){ /// show notification every 5 seconds\n      this.showNotificiation(\"You should rest your eyes!\")\n    }\n\n    if(this.state.lookingAwayStarted || this.state.breakStarted){\n      setTimeout(this.incrementLookAwayTime, 1000);\n    }\n    else{\n      setTimeout(this.incrementScreenTime, 1000);\n    }\n  }\n\n  incrementLookAwayTime(){\n    const new_lookingAway = this.state.lookingAway + 1;\n    this.setState({lookingAway: new_lookingAway});\n    if(new_lookingAway == this.state.settings.maxLookingAwayTime){ /// only show notification once\n      // reset looking at screen counter\n      this.setState({lookingAtScreen: 0});\n      this.showNotificiation(\"Eye de-stressing completed successfully!\")\n    }\n\n    /// being away from the screen also counts as resting your eyes\n    if(this.state.lookingAwayStarted || this.state.breakStarted){\n      setTimeout(this.incrementLookAwayTime, 1000);\n    }\n    else{\n      setTimeout(this.incrementScreenTime, 1000);\n    }\n  }\n\n  componentDidMount(){\n    const token = localStorage.getItem(\"logintoken\");\n    console.log(token);\n    if(token != null){\n      const saved_username = localStorage.getItem(\"username\");\n      this.setState({isLoggedIn: true, username: saved_username});\n    }\n\n    const prev_aggregatedPoseScore = localStorage.getItem(\"aggregatedPoseScore\");\n    if(prev_aggregatedPoseScore != null){\n      this.setState({aggregatedPoseScore: prev_aggregatedPoseScore});\n    }\n\n    const prev_totalTreesPlanted = localStorage.getItem(\"totalTreesPlanted\");\n    if(prev_totalTreesPlanted != null){\n      this.setState({totalTreesPlanted: prev_totalTreesPlanted});\n    }\n\n    const prev_settings = localStorage.getItem(\"settings\");\n    if(prev_settings != null){\n      this.setState({settings: JSON.parse(prev_settings)});\n    }\n\n    const prev_scoreHistory = localStorage.getItem(\"scoreHistory\");\n    if(prev_scoreHistory != null){\n      this.setState({scoreHistory: prev_scoreHistory.split(\",\")});\n    }\n  }\n\n  toggleStopped = () => {\n    const newstate = !this.state.isstopped;\n    this.setState({isstopped: newstate});\n    console.log(`isstopped toggled to ${newstate}`);\n  }\n\n  toggleVideo = () => {\n    const newstate = !this.state.showVideo;\n    this.setState({showVideo: newstate});\n    console.log(`showVideo toggled to ${newstate}`);\n  }\n\n  setCalibrationValue = (new_count) => {\n    this.setState({count: new_count});\n    console.log(new_count);\n  }\n\n  fixCalibration = (new_calibration) => {\n    const {\n      calibrated_noseDistance,\n      calibrated_shoulderDistance\n    } = new_calibration;\n    this.setState({\n      calibrated_noseDistance,\n      calibrated_shoulderDistance\n    });\n    console.log(calibrated_noseDistance);\n    console.log(calibrated_shoulderDistance);\n  }\n\n  startDetection(){\n    this.setState({isstarted: true});\n    const setValue = (new_value) => {\n      const {\n        isSlough,\n        keypoints, \n        noAttention, \n        noseDistance,\n        onBreak, \n        screenDistance,\n        shoulderDistance\n      } = new_value;\n      if(screenDistance < 0.35){\n        this.showNotificiation(`Too close to the screen! You are only ${screenDistance}cm away.`)\n      }\n\n      const new_currentPoseScore = noseDistance - (this.state.calibrated_noseDistance) + 25;\n      const old_aggregatedPoseScore = isNaN(this.state.aggregatedPoseScore) ? 0 : this.state.aggregatedPoseScore;\n      console.log(old_aggregatedPoseScore)\n      const added_score = Math.max(0, new_currentPoseScore);\n      console.log(added_score)\n      let new_aggregatedPoseScore = old_aggregatedPoseScore + 0.05*added_score;\n      console.log(new_aggregatedPoseScore)\n\n      const new_attentionTimeseries = [...this.state.attentionTimeseries, noAttention];\n      const new_breakTimeseries = [...this.state.breakTimeseries, onBreak];\n      const new_scoreHistory = [...this.state.scoreHistory, new_currentPoseScore];\n\n      function getSum(total, boolean) {\n        const element = boolean ? 1 : -1;\n        return total + element;\n      }\n      \n      console.log(new_attentionTimeseries);\n      // if no attention then this has to be positive\n      if(new_attentionTimeseries.slice(-5).reduce(getSum, 0) > 0){\n        this.setState({lookingAwayStarted: true});\n        //alert(\"starting noAttention counter\")\n      }\n      else{\n        this.setState({lookingAwayStarted: false});\n      }\n\n      // if on break then this has to be very positive\n      if(new_breakTimeseries.slice(-5).reduce(getSum, 0) > 0){\n        this.setState({breakStarted: true});\n        //alert(\"starting onBreak counter\")\n      }\n      else{\n        this.setState({breakStarted: false});\n      }\n\n      if(new_aggregatedPoseScore > 100){\n        //alert(\"You planted a tree! keep going!\")\n        new_aggregatedPoseScore = 0;\n        const new_totalTreesPlanted = parseInt(this.state.totalTreesPlanted) + 1;\n        this.setState({totalTreesPlanted: new_totalTreesPlanted});\n        localStorage.setItem(\"totalTreesPlanted\", new_totalTreesPlanted);\n        this.showNotificiation(`You planted a tree! Total: ${new_totalTreesPlanted}. Keep going!`)\n      }\n\n      this.setState({\n        value: new_value,\n        currentPoseScore: new_currentPoseScore,\n        aggregatedPoseScore: new_aggregatedPoseScore,\n        attentionTimeseries: new_attentionTimeseries,\n        breakTimeseries: new_breakTimeseries,\n        scoreHistory: new_scoreHistory\n      });\n      localStorage.setItem(\"scoreHistory\", new_scoreHistory);\n      localStorage.setItem(\"aggregatedPoseScore\", new_aggregatedPoseScore);\n      console.log(new_value);\n    }\n    const setIsLoaded = () => {\n      this.setState({isloaded: true});\n      console.log(\"model loaded\");\n    }\n    const getStopped = () => {\n      return this.state.isstopped;\n    }\n    bindPage(setValue, this.setCalibrationValue, this.fixCalibration, setIsLoaded, getStopped);\n    this.startCounters();\n  }\n\n  recalibrate(){\n    calibrate(this.setCalibrationValue, this.fixCalibration);\n  }\n\n  showNotificiation(text){\n    this.setState({showNotificiation: false, notificationText: text});\n    setTimeout(() => this.setState({showNotificiation: true}), 10);\n  }\n\n  closeLoginModal(){\n    this.setState({showLogin: false, showSignup: false});\n  }\n\n  openLoginModal(){\n    this.setState({showLogin: true});\n  }\n\n  register(username, password){\n    localStorage.setItem(\"username\", username);\n    localStorage.setItem(\"password\", password);\n    console.log(\"registered\")\n  }\n\n  login(username, password){\n    const saved_username = localStorage.getItem(\"username\");\n    const saved_password = localStorage.getItem(\"password\");\n    console.log(saved_username)\n    console.log(saved_password)\n    if(saved_username == username && saved_password == password){\n      alert(\"login successful\");\n      this.setState({isLoggedIn: true, username});\n      this.closeLoginModal();\n      localStorage.setItem(\"logintoken\", \"123456abc\");\n    }\n    else{\n      alert(\"login unsuccessful\");\n    }\n  }\n\n  logout(){\n    this.setState({isLoggedIn: false});\n    localStorage.removeItem(\"logintoken\");\n  }\n\n  handleSettingsChange(event){\n    let new_settings = this.state.settings;\n    new_settings[event.target.name] = event.target.value;\n    console.log(new_settings);\n    this.setState({settings: new_settings});\n    localStorage.setItem(\"settings\", JSON.stringify(new_settings));\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n          <Router>\n            {this.state.showNotificiation ? \n              <NotificationContainer notificationText={this.state.notificationText} /> : \"\"\n            }\n            <NavBar \n              isLoggedIn={this.state.isLoggedIn} \n              username={this.state.username}\n              openLoginModal={this.openLoginModal}\n              logout={this.logout}\n            />\n            <RouteSwitch \n              {...this.state} \n              showVideo={this.state.showVideo} \n              startDetection={this.startDetection}\n              toggleStopped={this.toggleStopped}\n              toggleVideo={this.toggleVideo}\n              recalibrate={this.recalibrate}\n              handleSettingsChange={this.handleSettingsChange}\n            />\n           <VideoContainerRouter showVideo={this.state.showVideo} toggleVideo={this.toggleVideo} />\n           <LoginModal \n            showLogin={this.state.showLogin} \n            showSignup={this.state.showSignup} \n            closeLoginModal={this.closeLoginModal}\n            register={this.register}\n            login={this.login}\n            />\n          </Router>\n      </div>\n    );\n  }\n}\n\nfunction VideoContainer (props) {\n  const athome = props.location.pathname === \"/home\" || props.location.pathname === \"/\";\n  return (\n    <div style={{display : (props.showVideo && athome)  ? \"block\" : \"none\"}} >\n      <div id=\"videocontainer\" style={{display: \"none\"}}>\n        <video id=\"video\"></video>\n      </div>\n      <canvas id=\"output\" style={{width: \"600px\", height: \"400px\", border: \"solid thin black\", position: \"absolute\", top: \"100px\", left: \"30%\"}} />          \n    </div>\n  )\n}\nconst VideoContainerRouter = withRouter(VideoContainer);\n\n\nfunction SettingsAccount() {\n  return (\n    <div>\n      <h2>Account settings</h2>\n      <div>Settings about (personalised) ads, emails, changing password etc.</div>\n    </div>\n  );\n}\n\nfunction SettingsUI() {\n  return (\n    <div>\n      <h2>UI Settings</h2>\n      <div>background color and so on</div>\n    </div>\n  );\n}\n\nfunction RouteSwitch(props) {\n  return (\n    <Switch>\n      <Route path=\"/home\">\n        <Home {...props} />\n      </Route>\n      <Route path=\"/about\">\n        <About />\n      </Route>\n      <Route path=\"/settings/account\">\n        <SettingsAccount />\n      </Route>\n      <Route path=\"/settings/reminders\">\n        <SettingsReminders {...props} />\n      </Route>\n      <Route path=\"/settings/ui\">\n        <SettingsUI />\n      </Route>\n      <Route path=\"/statistics\">\n        <Statistics {...props} />\n      </Route>\n      <Route path=\"/\">\n        <Home {...props} />\n      </Route>\n    </Switch>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/treeb1.5794a328.jpg\";","module.exports = __webpack_public_path__ + \"static/media/treeb2.bafe4094.jpg\";","module.exports = __webpack_public_path__ + \"static/media/treeb3.8de84b4e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/treeb4.d719421b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/treeb5.3ce43456.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sunb1.6a268ada.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sunb2.cd817fb7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sunb3.8e17353c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sunb4.ee5f47e8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sunb5.8f0b8502.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";"],"sourceRoot":""}